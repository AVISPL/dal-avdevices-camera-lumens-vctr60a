/*
 * Copyright (c) 2025 AVI-SPL Inc. All Rights Reserved.
 */
package com.avispl.symphony.dal.communicator.lumen.vc.tr60a.enums;

/**
 * This class used to define send packet
 *
 * @author Harry
 * @version 1.0.0
 * @since 1.0.0
 */
public enum SendPacket {
	POWER_ON(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x00, 0x02, (byte) 0xFF }),
	POWER_OFF(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x00, 0x03, (byte) 0xFF }),
	ZOOM_TELE(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x07, 0x21, (byte) 0xFF }),
	ZOOM_WIDE(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x07, 0x31, (byte) 0xFF }),
	ZOOM_STOP(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x07, 0x00, (byte) 0xFF }),
	FOCUS_FAR(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x08, 0x21, (byte) 0xFF }),
	FOCUS_NEAR(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x08, 0x31, (byte) 0xFF }),
	FOCUS_STOP(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x08, 0x00, (byte) 0xFF }),
	FOCUS_AUTO_MODE(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x38, 0x02, (byte) 0xFF }),
	FOCUS_MANUAL_MODE(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x38, 0x03, (byte) 0xFF }),
	FOCUS_ONE_PUSH_MODE(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x18, 0x01, (byte) 0xFF }),
	WB_AUTO_MODE(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x35, 0x00, (byte) 0xFF }),
	WB_INDOOR_MODE(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x35, 0x01, (byte) 0xFF }),
	WB_OUTDOOR_MODE(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x35, 0x02, (byte) 0xFF }),
	WB_ONE_PUSH_MODE(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x35, 0x03, (byte) 0xFF }),
	WB_MANUAL_MODE(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x35, 0x05, (byte) 0xFF }),
	WB_ONE_PUSH_TRIGGER(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x10, 0x05, (byte) 0xFF }),
	RGAIN_UP(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x03, 0x02, (byte) 0xFF }),
	RGAIN_DOWN(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x03, 0x03, (byte) 0xFF }),
	BGAIN_UP(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x04, 0x02, (byte) 0xFF }),
	BGAIN_DOWN(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x04, 0x03, (byte) 0xFF }),
	AE_FULL_AUTO_MODE(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x39, 0x00, (byte) 0xFF }),
	AE_MANUAL_MODE(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x39, 0x03, (byte) 0xFF }),
	AE_SHUTTER_PRIORITY_MODE(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x39, 0x0A, (byte) 0xFF }),
	AE_IRIS_PRIORITY_MODE(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x39, 0x0B, (byte) 0xFF }),
	SLOW_SHUTTER_ON(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x5A, 0x02, (byte) 0xFF }),
	SLOW_SHUTTER_OFF(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x5A, 0x03, (byte) 0xFF }),
	SHUTTER_DIRECT(new byte[] { 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x4A, 0x00, 0x00, 0x02, 0x08, (byte) 0xFF }),
	IRIS_DIRECT(new byte[] { 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x4B, 0x00, 0x00, 0x00, 0x09, (byte) 0xFF }),
	GAIN_DIRECT(new byte[] { 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x4C, 0x00, 0x00, 0x01, 0x07, (byte) 0xFF }),
	GAIN_LIMIT_DIRECT(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x2C, 0x17, (byte) 0xFF }),
	EXP_COMP_DIRECT(new byte[] { 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x4E, 0x00, 0x00, 0x00, 0x05, (byte) 0xFF }),
	BACKLIGHT_ON(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x33, 0x02, (byte) 0xFF }),
	BACKLIGHT_OFF(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x33, 0x03, (byte) 0xFF }),
	PRESET_SET(new byte[] { 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x3F, 0x01, 0x02, (byte) 0xFF }),
	PRESET_RECALL(new byte[] { 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x04, 0x3F, 0x02, 0x02, (byte) 0xFF }),
	SLOW_PAN_TILT_ON(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x06, 0x44, 0x02, (byte) 0xFF }),
	SLOW_PAN_TILT_OFF(new byte[] { 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x06, 0x44, 0x03, (byte) 0xFF }),
	PAN_TILT_DRIVE_STOP(new byte[] { 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x06, 0x01, 0x14, 0x0F, 0x03, 0x03, (byte) 0xFF }),
	PAN_TILT_DRIVE_UP(new byte[] { 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x06, 0x01, 0x14, 0x0F, 0x03, 0x01, (byte) 0xFF }),
	PAN_TILT_DRIVE_DOWN(new byte[] { 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x06, 0x01, 0x14, 0x0F, 0x03, 0x02, (byte) 0xFF }),
	PAN_TILT_DRIVE_LEFT(new byte[] { 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x06, 0x01, 0x14, 0x0F, 0x01, 0x03, (byte) 0xFF }),
	PAN_TILT_DRIVE_RIGHT(new byte[] { 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x06, 0x01, 0x14, 0x0F, 0x02, 0x03, (byte) 0xFF }),
	PAN_TILT_DRIVE_DOWN_LEFT(new byte[] { 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x06, 0x01, 0x14, 0x0F, 0x01, 0x02, (byte) 0xFF }),
	PAN_TILT_DRIVE_DOWN_RIGHT(new byte[] { 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x06, 0x01, 0x14, 0x0F, 0x02, 0x02, (byte) 0xFF }),
	PAN_TILT_DRIVE_UP_LEFT(new byte[] { 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x06, 0x01, 0x14, 0x0F, 0x01, 0x01, (byte) 0xFF }),
	PAN_TILT_DRIVE_UP_RIGHT(new byte[] { 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x06, 0x01, 0x14, 0x0F, 0x02, 0x01, (byte) 0xFF }),
	PAN_TILT_DRIVE_HOME(new byte[] { 0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x01, 0x06, 0x04, (byte) 0xFF }),

	POWER_STATUS_INQ(new byte[] { 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x09, 0x04, 0x00, (byte) 0xFF }),
	FOCUS_STATUS_INQ(new byte[] { 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x09, 0x04, 0x38, (byte) 0xFF }),
	AE_MODE_INQ(new byte[] { 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x09, 0x04, 0x39, (byte) 0xFF }),
	SLOW_SHUTTER_STATUS_INQ(new byte[] { 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x09, 0x04, 0x5A, (byte) 0xFF }),
	SHUTTER_POS_INQ(new byte[] { 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x09, 0x04, 0x4A, (byte) 0xFF }),
	IRIS_POS_INQ(new byte[] { 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x09, 0x04, 0x4B, (byte) 0xFF }),
	GAIN_POS_INQ(new byte[] { 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x09, 0x04, 0x4C, (byte) 0xFF }),
	GAIN_LIMIT_POS_INQ(new byte[] { 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x09, 0x04, 0x2C, (byte) 0xFF }),
	EXP_COMP_POS_INQ(new byte[] { 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x09, 0x04, 0x4E, (byte) 0xFF }),
	BACKLIGHT_INQ(new byte[] { 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x09, 0x04, 0x33, (byte) 0xFF }),
	WB_MODE_INQ(new byte[] { 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x09, 0x04, 0x35, (byte) 0xFF }),
	RGAIN_INQ(new byte[] { 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x09, 0x04, 0x43, (byte) 0xFF }),
	BGAIN_INQ(new byte[] { 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x09, 0x04, 0x44, (byte) 0xFF }),
	SLOW_PAN_TILT_INQ(new byte[] { 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x09, 0x06, 0x44, (byte) 0xFF }),
	LAST_PRESET_RECALLED(new byte[] { 0x01, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, (byte) 0x81, 0x09, 0x04, 0x3F, (byte) 0xFF });

	private final byte[] code;

	SendPacket(byte[] code) {
		this.code = code;
	}

	/**
	 * Retrieves {@code {@link #code}}
	 *
	 * @return value of {@link #code}
	 */
	public byte[] getCode() {
		return code;
	}
}
